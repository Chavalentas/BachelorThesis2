[
    {
        "id": "62ed47ec1a4fceaa",
        "type": "tab",
        "label": "mssql-function",
        "disabled": false,
        "info": ""
    },
    {
        "id": "m4a829677v18822x",
        "type": "comment",
        "z": "62ed47ec1a4fceaa",
        "name": "mssql-function",
        "info": "",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "tu001r3vn2gj65et",
        "type": "comment",
        "z": "62ed47ec1a4fceaa",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "fxza4u856llrf2em",
        "type": "comment",
        "z": "62ed47ec1a4fceaa",
        "name": "GetEndPoint (function parameters are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "1sce7w27921dxl8c",
        "type": "catch",
        "z": "62ed47ec1a4fceaa",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "6o78jz8nqwp034ce"
            ]
        ]
    },
    {
        "id": "6o78jz8nqwp034ce",
        "type": "function",
        "z": "62ed47ec1a4fceaa",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "n4110ko120s6s7qr"
            ]
        ]
    },
    {
        "id": "n4110ko120s6s7qr",
        "type": "http response",
        "z": "62ed47ec1a4fceaa",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "5o581sqhut834xfz",
        "type": "http in",
        "z": "62ed47ec1a4fceaa",
        "name": "",
        "url": "/dbo.tvf_test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "s05kk754v618654q"
            ]
        ]
    },
    {
        "id": "s05kk754v618654q",
        "type": "function",
        "z": "62ed47ec1a4fceaa",
        "name": "CheckFunctionParameters",
        "func": "var queryParameters = Object.getOwnPropertyNames(msg.req.query);\nif (queryParameters.some(p => p != \"param\")){\n    throw new Error(\"Invalid query parameter detected!\");\n}\n\nif (msg.req.query.param === undefined){\n    throw new Error(\"The parameters were not defined!\");\n}\n\n\nmsg.functionParameters = [];\nvar params = msg.req.query.param;\n\nfor (let i = 0; i < params.length; i++){\n    msg.functionParameters.push(params[i]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "119u23l9yvl03t19"
            ]
        ]
    },
    {
        "id": "119u23l9yvl03t19",
        "type": "function",
        "z": "62ed47ec1a4fceaa",
        "name": "SetQueryParameters",
        "func": "var selectQuery = \"SELECT * FROM dbo.tvf_test(\";\nvar functionArgs = [];\n\nif (msg.functionParameters.length > 0) {\n    for (let i = 0; i < msg.functionParameters.length; i++) {\n      if (msg.functionParameters[i] === \"default\") {\n          functionArgs.push(`${msg.functionParameters[i]}`);\n          continue;\n       } \n\n       if (msg.functionParameters[i] === \"null\"){\n           functionArgs.push(`${msg.functionParameters[i]}`);\n           continue;\n       }\n\n       functionArgs.push(`'${msg.functionParameters[i]}'`);\n    }\n}\n\nselectQuery += functionArgs.join(\",\");\nselectQuery += \");\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "zq1ivl95ke43baof"
            ]
        ]
    },
    {
        "id": "zq1ivl95ke43baof",
        "type": "MSSQL",
        "z": "62ed47ec1a4fceaa",
        "mssqlCN": "41j9vc15ancy3l52",
        "name": "Query",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "query",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "5m4r036l4yfqw821"
            ]
        ]
    },
    {
        "id": "5m4r036l4yfqw821",
        "type": "function",
        "z": "62ed47ec1a4fceaa",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response  \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "eu9a5lr20ys0732v"
            ]
        ]
    },
    {
        "id": "eu9a5lr20ys0732v",
        "type": "http response",
        "z": "62ed47ec1a4fceaa",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "41j9vc15ancy3l52",
        "type": "MSSQL-CN",
        "z": "62ed47ec1a4fceaa",
        "name": "",
        "server": "localhost",
        "port": "79",
        "encyption": false,
        "trustServerCertificate": false,
        "database": "master",
        "useUTC": false,
        "connectTimeout": "",
        "requestTimeout": "",
        "cancelTimeout": "",
        "pool": "",
        "parseJSON": false,
        "enableArithAbort": true
    }
]