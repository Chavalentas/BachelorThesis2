[
    {
        "id": "cd9049a59a50013e",
        "type": "tab",
        "label": "mssql-strp",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ik663a0q312w4287",
        "type": "comment",
        "z": "cd9049a59a50013e",
        "name": "mssql-strp",
        "info": "",
        "x": 460,
        "y": 140,
        "wires": []
    },
    {
        "id": "vr5pbuwlqn4lw1x2",
        "type": "comment",
        "z": "cd9049a59a50013e",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "u5z8e9k6h65lc76x",
        "type": "comment",
        "z": "cd9049a59a50013e",
        "name": "GetEndPoint (procedure parameters are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "y9t6d3795u9i215h",
        "type": "catch",
        "z": "cd9049a59a50013e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "3nwc7440yy3kknju"
            ]
        ]
    },
    {
        "id": "3nwc7440yy3kknju",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "9f5c89b8jq06fd9u"
            ]
        ]
    },
    {
        "id": "9f5c89b8jq06fd9u",
        "type": "http response",
        "z": "cd9049a59a50013e",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "l9qq324ru0d71bk4",
        "type": "http in",
        "z": "cd9049a59a50013e",
        "name": "",
        "url": "/dbo.pr_test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "pxc3n7rv46vy2i9g"
            ]
        ]
    },
    {
        "id": "pxc3n7rv46vy2i9g",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "CheckProcedureParameters",
        "func": "var queryParameters = Object.getOwnPropertyNames(msg.req.query);\nif (queryParameters.some(p => p != \"param\")) {\n    throw new Error(\"Invalid query parameter detected!\");\n}\n\nif (msg.req.query.param === undefined) {\n    throw new Error(\"The parameters were not defined!\");\n}\n\n\nmsg.procedureParameters = [];\nvar params = msg.req.query.param;\n\nfor (let i = 0; i < params.length; i++) {\n    msg.procedureParameters.push(params[i]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "60cc2h1pors767x2"
            ]
        ]
    },
    {
        "id": "60cc2h1pors767x2",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "SetQueryParametersForMetadata",
        "func": "msg.queryParameters = {\n    \"schema\" : \"dbo\",\n    \"procName\" : \"pr_test\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "tj5ik8nkipcu4d7i"
            ]
        ]
    },
    {
        "id": "tj5ik8nkipcu4d7i",
        "type": "MSSQL",
        "z": "cd9049a59a50013e",
        "mssqlCN": "071fhew6saj3803j",
        "name": "ProcParametersQuery",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT parameter_name\r\nFROM information_schema.routines r\r\nINNER JOIN information_schema.parameters p\r\nON p.specific_name = r.routine_name\r\nWHERE r.routine_schema = '{{{queryParameters.schema}}}'\r\nAND r.routine_type = 'PROCEDURE'\r\nAND p.parameter_mode <> 'OUT'\r\nAND r.specific_name = '{{{queryParameters.procName}}}'",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "4799n61i7495plgk"
            ]
        ]
    },
    {
        "id": "4799n61i7495plgk",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "SetProcParameterNames",
        "func": "msg.paramNames = [];\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    var paramName = msg.payload[i].parameter_name;\n\n    if (paramName[0] == '@') {\n        paramName = paramName.slice(1);\n    }\n\n    msg.paramNames.push(paramName);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "ua7k1bqow2wstq23"
            ]
        ]
    },
    {
        "id": "ua7k1bqow2wstq23",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "SetParametersForProcedureQuery",
        "func": "msg.queryParams = [];\n\nfor (let i = 0; i < msg.procedureParameters.length; i++){\n    if (msg.procedureParameters[i] === \"default\"){\n        continue;\n    }\n    \n    var value = msg.procedureParameters[i];\n\n    if (value === \"null\"){\n        value = null;\n    }\n    \n    var param = {\n      \"output\" : false,\n      \"name\" : msg.paramNames[i],\n      \"type\" : null,\n      \"value\" : value,\n      \"options\" : {\n          \"nullable\" : true,\n          \"primary\" : false,\n          \"identity\" : false,\n          \"readOnly\" : false\n       }\n   };\n   \n   msg.queryParams.push(param);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 440,
        "wires": [
            [
                "rvz859zihd7y3lre"
            ]
        ]
    },
    {
        "id": "rvz859zihd7y3lre",
        "type": "MSSQL",
        "z": "cd9049a59a50013e",
        "mssqlCN": "071fhew6saj3803j",
        "name": "Query",
        "outField": "payload",
        "returnType": 1,
        "throwErrors": 1,
        "query": "dbo.pr_test",
        "modeOpt": "",
        "modeOptType": "execute",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1950,
        "y": 440,
        "wires": [
            [
                "x7598o0j97bfv0g7"
            ]
        ]
    },
    {
        "id": "x7598o0j97bfv0g7",
        "type": "switch",
        "z": "cd9049a59a50013e",
        "name": "CheckReturnValue",
        "property": "payload.returnValue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2250,
        "y": 440,
        "wires": [
            [
                "kgw02o631252gh92"
            ],
            [
                "kgw02o631252gh92"
            ],
            [
                "3ec3zf93q7tvmlz1"
            ]
        ]
    },
    {
        "id": "kgw02o631252gh92",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response.recordsets\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 340,
        "wires": [
            [
                "uhc08v5pes4880c0"
            ]
        ]
    },
    {
        "id": "uhc08v5pes4880c0",
        "type": "http response",
        "z": "cd9049a59a50013e",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 2850,
        "y": 340,
        "wires": []
    },
    {
        "id": "3ec3zf93q7tvmlz1",
        "type": "function",
        "z": "cd9049a59a50013e",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response.recordsets\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 540,
        "wires": [
            [
                "m85ijl7wqg3h6np8"
            ]
        ]
    },
    {
        "id": "m85ijl7wqg3h6np8",
        "type": "http response",
        "z": "cd9049a59a50013e",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 2850,
        "y": 540,
        "wires": []
    },
    {
        "id": "071fhew6saj3803j",
        "type": "MSSQL-CN",
        "z": "cd9049a59a50013e",
        "name": "",
        "server": "localhost",
        "port": "79",
        "encyption": false,
        "trustServerCertificate": false,
        "database": "master",
        "useUTC": false,
        "connectTimeout": "",
        "requestTimeout": "",
        "cancelTimeout": "",
        "pool": "",
        "parseJSON": false,
        "enableArithAbort": true
    }
]