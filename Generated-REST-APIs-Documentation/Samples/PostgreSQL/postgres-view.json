[
    {
        "id": "9fafe956705ac345",
        "type": "tab",
        "label": "postgres-view"
    },
    {
        "id": "8j6vbt8k2rmx559g",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "postgres-view",
        "info": "",
        "x": 450,
        "y": 140,
        "wires": []
    },
    {
        "id": "050z1v10u94no53j",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "9d5k37yljv5sea7r",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "GetEndPoint (view attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "bp0qh0wy6nz3p54t",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "PostEndPoint (request body contains the attributes of the view, no request parameters)",
        "info": "",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "avn79zrrm6z5mb72",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "PutEndPoint (request body contains the attributes of the view, request parameters the primary key)",
        "info": "",
        "x": 450,
        "y": 690,
        "wires": []
    },
    {
        "id": "1suf11mrmahu386x",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "DeleteEndPoint (no request body, request parameters contain the primary key)",
        "info": "",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "uh5ihrz8s32ov01w",
        "type": "comment",
        "z": "9fafe956705ac345",
        "name": "DeleteEndPoint (view attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 990,
        "wires": []
    },
    {
        "id": "jq1xen4w13l0ucf6",
        "type": "catch",
        "z": "9fafe956705ac345",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "635u0s1old114d39"
            ]
        ]
    },
    {
        "id": "635u0s1old114d39",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "j04j7bwg7e44wach"
            ]
        ]
    },
    {
        "id": "j04j7bwg7e44wach",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "3w56hsr0x433q38p",
        "type": "http in",
        "z": "9fafe956705ac345",
        "name": "",
        "url": "/public.housesview",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "7e3v10l917s0vuck"
            ]
        ]
    },
    {
        "id": "7e3v10l917s0vuck",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "6386p493i70rm8d1"
            ]
        ]
    },
    {
        "id": "6386p493i70rm8d1",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "CreateSelectQuery",
        "func": "var selectQuery = \"SELECT * FROM public.housesview\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = \"\";\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    selectQuery += \" WHERE \";\n    selectQuery += `${equationsJoined}`;\n}\n\nselectQuery += \";\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "y71n4a0117cxbvcb"
            ]
        ]
    },
    {
        "id": "y71n4a0117cxbvcb",
        "type": "postgresql",
        "z": "9fafe956705ac345",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "v67xsd12ygcb8my3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "ksz7j2gfhvnul7yv"
            ]
        ]
    },
    {
        "id": "ksz7j2gfhvnul7yv",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response  \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "1lm2ud96bk25in8p"
            ]
        ]
    },
    {
        "id": "1lm2ud96bk25in8p",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "sn2u2an07j12n41m",
        "type": "http in",
        "z": "9fafe956705ac345",
        "name": "",
        "url": "/public.housesview",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 590,
        "wires": [
            [
                "yr386k1v02cc970q"
            ]
        ]
    },
    {
        "id": "yr386k1v02cc970q",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 590,
        "wires": [
            [
                "k1iqst307d7ot7n4"
            ]
        ]
    },
    {
        "id": "k1iqst307d7ot7n4",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "CreateInsertQuery",
        "func": "var insertQuery = \"INSERT INTO public.housesview\";\nvar propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = [];\n\nfor (let i = 0; i < msg.queryProperties.length; i++){\n    if (msg.queryProperties[i].propertyValue === \"null\"){\n        propertyValues.push(msg.queryProperties[i].propertyValue);\n    } else{\n        propertyValues.push(`'${msg.queryProperties[i].propertyValue}'`);\n    }\n}\n\nvar propertyNamesJoined = propertyNames.join(\",\");\nvar propertyValuesJoined = propertyValues.join(\",\");\ninsertQuery += `(${propertyNamesJoined})`;\ninsertQuery += \" VALUES \";\ninsertQuery += `(${propertyValuesJoined})`;\ninsertQuery += \";\";\nconsole.log(insertQuery);\nmsg.query = insertQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 590,
        "wires": [
            [
                "4ll3627134bd7c2q"
            ]
        ]
    },
    {
        "id": "4ll3627134bd7c2q",
        "type": "postgresql",
        "z": "9fafe956705ac345",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "v67xsd12ygcb8my3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 590,
        "wires": [
            [
                "s72rn3612x261z83"
            ]
        ]
    },
    {
        "id": "s72rn3612x261z83",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 590,
        "wires": [
            [
                "8m96x1r8hn4uc7n5"
            ]
        ]
    },
    {
        "id": "8m96x1r8hn4uc7n5",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 201,
        "headers": {},
        "x": 1650,
        "y": 590,
        "wires": []
    },
    {
        "id": "y5uh2t96o9474bar",
        "type": "http in",
        "z": "9fafe956705ac345",
        "name": "",
        "url": "/public.housesview/:houseid",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "s8209jtpz7i56z2m"
            ]
        ]
    },
    {
        "id": "s8209jtpz7i56z2m",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (msg.req.params.houseid === undefined){\n    throw new Error('The query parameter \\'houseid\\' was undefined!');\n}\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nmsg.pk = {\"propertyName\" : \"houseid\", \"propertyValue\" : msg.req.params.houseid};\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            [
                "l36w4f533e654907"
            ]
        ]
    },
    {
        "id": "l36w4f533e654907",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "CreateUpdateQuery",
        "func": "var propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = msg.queryProperties.map(p => p.propertyValue);\nvar equations = [];\n\nfor (let i = 0; i < propertyNames.length; i++){\n    var propertyValue = \"\";\n\n    if (propertyValues[i] === \"null\"){\n        propertyValue = propertyValues[i];\n    } else{\n        propertyValue = `'${propertyValues[i]}'`;\n    }\n\n    var equation = `${propertyNames[i]} = ${propertyValue}`;\n    equations.push(equation);\n}\n\nvar pk = \"\";\n\nif (msg.pk.propertyValue === \"null\"){\n    pk = msg.pk.propertyValue;\n} else{\n    pk = `'${msg.pk.propertyValue}'`;\n}\n\nvar equationsJoined = equations.join(\",\");\nvar updateQuery = `UPDATE public.housesview SET ${equationsJoined} WHERE ${msg.pk.propertyName} = ${pk};`;\nmsg.query = updateQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 740,
        "wires": [
            [
                "uy3s8a9u2v97g0jt"
            ]
        ]
    },
    {
        "id": "uy3s8a9u2v97g0jt",
        "type": "postgresql",
        "z": "9fafe956705ac345",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "v67xsd12ygcb8my3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "2ptes37ap2i9w7z4"
            ]
        ]
    },
    {
        "id": "2ptes37ap2i9w7z4",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 740,
        "wires": [
            [
                "6c18pi0967i2z661"
            ]
        ]
    },
    {
        "id": "6c18pi0967i2z661",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 740,
        "wires": []
    },
    {
        "id": "rr2n29871wjoj62b",
        "type": "http in",
        "z": "9fafe956705ac345",
        "name": "",
        "url": "/public.housesview/:houseid",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 890,
        "wires": [
            [
                "18lm84c0kva869sd"
            ]
        ]
    },
    {
        "id": "18lm84c0kva869sd",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetQueryParameters",
        "func": "if (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nvar pkValue = \"\";\n\nif (msg.req.params.houseid === \"null\"){\n    pkValue = null;\n} else{\n    pkValue = msg.req.params.houseid;\n}\n\nvar data = {\n    pk : pkValue\n};\n\nmsg.queryParameters = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 890,
        "wires": [
            [
                "v6544e4l11c4x816"
            ]
        ]
    },
    {
        "id": "v6544e4l11c4x816",
        "type": "postgresql",
        "z": "9fafe956705ac345",
        "name": "Query",
        "query": "DELETE FROM public.housesview WHERE houseid = $pk;",
        "postgreSQLConfig": "v67xsd12ygcb8my3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 750,
        "y": 890,
        "wires": [
            [
                "g3eylh2r3c9qjg90"
            ]
        ]
    },
    {
        "id": "g3eylh2r3c9qjg90",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 890,
        "wires": [
            [
                "72v3kexkt7r33szl"
            ]
        ]
    },
    {
        "id": "72v3kexkt7r33szl",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1350,
        "y": 890,
        "wires": []
    },
    {
        "id": "vn48032d336h9t5o",
        "type": "http in",
        "z": "9fafe956705ac345",
        "name": "",
        "url": "/public.housesview",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "ae08ungt509k63g2"
            ]
        ]
    },
    {
        "id": "ae08ungt509k63g2",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "1d300c1526vhzqkl"
            ]
        ]
    },
    {
        "id": "1d300c1526vhzqkl",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "CreateDeleteQuery",
        "func": "var deleteQuery = \"DELETE FROM public.housesview\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = '';\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    deleteQuery += \" WHERE \";\n    deleteQuery += `${equationsJoined}`;\n}\n\ndeleteQuery += \";\";\nmsg.query = deleteQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "e7llrc72xj881913"
            ]
        ]
    },
    {
        "id": "e7llrc72xj881913",
        "type": "postgresql",
        "z": "9fafe956705ac345",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "v67xsd12ygcb8my3",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "589kds767a43irpj"
            ]
        ]
    },
    {
        "id": "589kds767a43irpj",
        "type": "function",
        "z": "9fafe956705ac345",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1040,
        "wires": [
            [
                "27428gk1fr90zru2"
            ]
        ]
    },
    {
        "id": "27428gk1fr90zru2",
        "type": "http response",
        "z": "9fafe956705ac345",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "v67xsd12ygcb8my3",
        "type": "postgreSQLConfig",
        "z": "9fafe956705ac345",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "secret",
        "passwordFieldType": "str"
    }
]