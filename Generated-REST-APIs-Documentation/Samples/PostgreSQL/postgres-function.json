[
    {
        "id": "c82f1a6c441263dc",
        "type": "tab",
        "label": "postgres-function"
    },
    {
        "id": "25657j7hr0492477",
        "type": "comment",
        "z": "c82f1a6c441263dc",
        "name": "postgres-function",
        "info": "",
        "x": 450,
        "y": 140,
        "wires": []
    },
    {
        "id": "sc64bo176j02v1v8",
        "type": "comment",
        "z": "c82f1a6c441263dc",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "6i823vym3603d869",
        "type": "comment",
        "z": "c82f1a6c441263dc",
        "name": "GetEndPoint (function parameters are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "g24l8k0gdf9p14a0",
        "type": "catch",
        "z": "c82f1a6c441263dc",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "n0z4ypx0vjwbyd6d"
            ]
        ]
    },
    {
        "id": "n0z4ypx0vjwbyd6d",
        "type": "function",
        "z": "c82f1a6c441263dc",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "03y1704ag0mds8wt"
            ]
        ]
    },
    {
        "id": "03y1704ag0mds8wt",
        "type": "http response",
        "z": "c82f1a6c441263dc",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "y2m57jeb3xayv2e7",
        "type": "http in",
        "z": "c82f1a6c441263dc",
        "name": "",
        "url": "/public.tvf_test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "uiy5nyzi8nc611lr"
            ]
        ]
    },
    {
        "id": "uiy5nyzi8nc611lr",
        "type": "function",
        "z": "c82f1a6c441263dc",
        "name": "CheckFunctionParameters",
        "func": "var queryParameters = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryParameters.some(p => p != \"param\")){\n    throw new Error(\"Invalid query parameter detected!\");\n}\n\nif (msg.req.query.param === undefined){\n    throw new Error(\"The parameters were not defined!\");\n}\n\nmsg.functionParameters = [];\nvar params = msg.req.query.param;\n\nfor (let i = 0; i < params.length; i++){\n    msg.functionParameters.push(params[i]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "nsw9h4050ndy68n3"
            ]
        ]
    },
    {
        "id": "nsw9h4050ndy68n3",
        "type": "function",
        "z": "c82f1a6c441263dc",
        "name": "SetQueryParameters",
        "func": "var selectQuery = \"SELECT * FROM public.tvf_test(\";\nvar functionArgs = [];\n\nif (msg.functionParameters.length > 0){\n    for (let i = 0; i < msg.functionParameters.length; i++){\n        if (msg.functionParameters[i] === \"default\"){\n          continue;\n        }\n\n        if (msg.functionParameters[i] === \"null\") {\n          functionArgs.push(msg.functionParameters[i]);\n          continue;\n        }\n\n        functionArgs.push(`'${msg.functionParameters[i]}'`);\n    }\n}\n\nselectQuery += functionArgs.join(\",\");\nselectQuery += \");\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "1e7302al31v074x2"
            ]
        ]
    },
    {
        "id": "1e7302al31v074x2",
        "type": "postgresql",
        "z": "c82f1a6c441263dc",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "ut69juxne1p9qo40",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "o917x8d4il3112s3"
            ]
        ]
    },
    {
        "id": "o917x8d4il3112s3",
        "type": "function",
        "z": "c82f1a6c441263dc",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response  \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "8h156olri36hq365"
            ]
        ]
    },
    {
        "id": "8h156olri36hq365",
        "type": "http response",
        "z": "c82f1a6c441263dc",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "ut69juxne1p9qo40",
        "type": "postgreSQLConfig",
        "z": "c82f1a6c441263dc",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "secret",
        "passwordFieldType": "str"
    }
]