[
    {
        "id": "25c11c1790e547b3",
        "type": "tab",
        "label": "postgres-table"
    },
    {
        "id": "v9msc3r431bcc261",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "postgres-table",
        "info": "",
        "x": 450,
        "y": 140,
        "wires": []
    },
    {
        "id": "485239t4upqcfrh4",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "ddkqyxd4aqnnn642",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "GetEndPoint (table attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "00183rx995h0w9o3",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "PostEndPoint (request body contains the attributes of the table, no request parameters)",
        "info": "",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "806l9whs4c5d2vgy",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "PutEndPoint (request body contains the attributes of the table, request parameters the primary key)",
        "info": "",
        "x": 450,
        "y": 690,
        "wires": []
    },
    {
        "id": "079o2xq5p5o0324z",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "DeleteEndPoint (no request body, request parameters contain the primary key)",
        "info": "",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "bzegyviy128ocyo9",
        "type": "comment",
        "z": "25c11c1790e547b3",
        "name": "DeleteEndPoint (table attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 990,
        "wires": []
    },
    {
        "id": "1fn282981f7i3f1e",
        "type": "catch",
        "z": "25c11c1790e547b3",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "2950v8h480r997gt"
            ]
        ]
    },
    {
        "id": "2950v8h480r997gt",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "36fh055196868kfw"
            ]
        ]
    },
    {
        "id": "36fh055196868kfw",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "9n40r64wrfe3s834",
        "type": "http in",
        "z": "25c11c1790e547b3",
        "name": "",
        "url": "/public.houses",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "s2h7f7qu0v97e3p9"
            ]
        ]
    },
    {
        "id": "s2h7f7qu0v97e3p9",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "s5759zxy465ekvd9"
            ]
        ]
    },
    {
        "id": "s5759zxy465ekvd9",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "CreateSelectQuery",
        "func": "var selectQuery = \"SELECT * FROM public.houses\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = \"\";\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    selectQuery += \" WHERE \";\n    selectQuery += `${equationsJoined}`;\n}\n\nselectQuery += \";\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "g94zim9sl6hs717e"
            ]
        ]
    },
    {
        "id": "g94zim9sl6hs717e",
        "type": "postgresql",
        "z": "25c11c1790e547b3",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "46dzj166zwh3t8e5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "57ekl1s9i3q96z5f"
            ]
        ]
    },
    {
        "id": "57ekl1s9i3q96z5f",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response  \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "f93p815tv75e377f"
            ]
        ]
    },
    {
        "id": "f93p815tv75e377f",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "06hj20d68t424gz0",
        "type": "http in",
        "z": "25c11c1790e547b3",
        "name": "",
        "url": "/public.houses",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 590,
        "wires": [
            [
                "4vx61r51tq1x9ac4"
            ]
        ]
    },
    {
        "id": "4vx61r51tq1x9ac4",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 590,
        "wires": [
            [
                "26bq9k0vl0a0zg8e"
            ]
        ]
    },
    {
        "id": "26bq9k0vl0a0zg8e",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "CreateInsertQuery",
        "func": "var insertQuery = \"INSERT INTO public.houses\";\nvar propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = [];\n\nfor (let i = 0; i < msg.queryProperties.length; i++){\n    if (msg.queryProperties[i].propertyValue === \"null\"){\n        propertyValues.push(msg.queryProperties[i].propertyValue);\n    } else{\n        propertyValues.push(`'${msg.queryProperties[i].propertyValue}'`);\n    }\n}\n\nvar propertyNamesJoined = propertyNames.join(\",\");\nvar propertyValuesJoined = propertyValues.join(\",\");\ninsertQuery += `(${propertyNamesJoined})`;\ninsertQuery += \" VALUES \";\ninsertQuery += `(${propertyValuesJoined})`;\ninsertQuery += \";\";\nconsole.log(insertQuery);\nmsg.query = insertQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 590,
        "wires": [
            [
                "ngz5816umcmf1awk"
            ]
        ]
    },
    {
        "id": "ngz5816umcmf1awk",
        "type": "postgresql",
        "z": "25c11c1790e547b3",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "46dzj166zwh3t8e5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 590,
        "wires": [
            [
                "38561f6u2fy3gsai"
            ]
        ]
    },
    {
        "id": "38561f6u2fy3gsai",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 590,
        "wires": [
            [
                "ls274l707ujt8f80"
            ]
        ]
    },
    {
        "id": "ls274l707ujt8f80",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 201,
        "headers": {},
        "x": 1650,
        "y": 590,
        "wires": []
    },
    {
        "id": "0mnk5v144q538113",
        "type": "http in",
        "z": "25c11c1790e547b3",
        "name": "",
        "url": "/public.houses/:houseid",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "se10863jhxp7983c"
            ]
        ]
    },
    {
        "id": "se10863jhxp7983c",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nmsg.pk = {\"propertyName\" : \"houseid\", \"propertyValue\" : msg.req.params.houseid};\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            [
                "j9u2n42g5rnvxfrq"
            ]
        ]
    },
    {
        "id": "j9u2n42g5rnvxfrq",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "CreateUpdateQuery",
        "func": "var propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = msg.queryProperties.map(p => p.propertyValue);\nvar equations = [];\n\nfor (let i = 0; i < propertyNames.length; i++){\n    var propertyValue = \"\";\n\n    if (propertyValues[i] === \"null\"){\n        propertyValue = propertyValues[i];\n    } else{\n        propertyValue = `'${propertyValues[i]}'`;\n    }\n\n    var equation = `${propertyNames[i]} = ${propertyValue}`;\n    equations.push(equation);\n}\n\nvar pk = \"\";\n\nif (msg.pk.propertyValue === \"null\"){\n    pk = msg.pk.propertyValue;\n} else{\n    pk = `'${msg.pk.propertyValue}'`;\n}\n\nvar equationsJoined = equations.join(\",\");\nvar updateQuery = `UPDATE public.houses SET ${equationsJoined} WHERE ${msg.pk.propertyName} = ${pk};`;\nmsg.query = updateQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 740,
        "wires": [
            [
                "oe9b7l0m89201s6d"
            ]
        ]
    },
    {
        "id": "oe9b7l0m89201s6d",
        "type": "postgresql",
        "z": "25c11c1790e547b3",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "46dzj166zwh3t8e5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "p9741ypb7u894r81"
            ]
        ]
    },
    {
        "id": "p9741ypb7u894r81",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 740,
        "wires": [
            [
                "o6i3ou0sskvtye42"
            ]
        ]
    },
    {
        "id": "o6i3ou0sskvtye42",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 740,
        "wires": []
    },
    {
        "id": "ux1d2439iajeoqcy",
        "type": "http in",
        "z": "25c11c1790e547b3",
        "name": "",
        "url": "/public.houses/:houseid",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 890,
        "wires": [
            [
                "rmt066kti2be2ns1"
            ]
        ]
    },
    {
        "id": "rmt066kti2be2ns1",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetQueryParameters",
        "func": "if (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nvar pkValue = \"\";\n\nif (msg.req.params.houseid === \"null\"){\n    pkValue = null;\n} else{\n    pkValue = msg.req.params.houseid;\n}\n\nvar data = {\n    pk : pkValue\n};\n\nmsg.queryParameters = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 890,
        "wires": [
            [
                "uiyt09a5yw9bz30j"
            ]
        ]
    },
    {
        "id": "uiyt09a5yw9bz30j",
        "type": "postgresql",
        "z": "25c11c1790e547b3",
        "name": "Query",
        "query": "DELETE FROM public.houses WHERE houseid = $pk;",
        "postgreSQLConfig": "46dzj166zwh3t8e5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 750,
        "y": 890,
        "wires": [
            [
                "hb3o582dhfvfm962"
            ]
        ]
    },
    {
        "id": "hb3o582dhfvfm962",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 890,
        "wires": [
            [
                "srz267ca6jt2xxy3"
            ]
        ]
    },
    {
        "id": "srz267ca6jt2xxy3",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1350,
        "y": 890,
        "wires": []
    },
    {
        "id": "n2367qmr76n539k2",
        "type": "http in",
        "z": "25c11c1790e547b3",
        "name": "",
        "url": "/public.houses",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "w1s72ygupm4tloeb"
            ]
        ]
    },
    {
        "id": "w1s72ygupm4tloeb",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "8n51xc6y73su2l3j"
            ]
        ]
    },
    {
        "id": "8n51xc6y73su2l3j",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "CreateDeleteQuery",
        "func": "var deleteQuery = \"DELETE FROM public.houses\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = '';\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    deleteQuery += \" WHERE \";\n    deleteQuery += `${equationsJoined}`;\n}\n\ndeleteQuery += \";\";\nmsg.query = deleteQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "4vv8tx24we6o3em6"
            ]
        ]
    },
    {
        "id": "4vv8tx24we6o3em6",
        "type": "postgresql",
        "z": "25c11c1790e547b3",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "46dzj166zwh3t8e5",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "w93j014gb58l4d83"
            ]
        ]
    },
    {
        "id": "w93j014gb58l4d83",
        "type": "function",
        "z": "25c11c1790e547b3",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1040,
        "wires": [
            [
                "cp9138b697y5ssrw"
            ]
        ]
    },
    {
        "id": "cp9138b697y5ssrw",
        "type": "http response",
        "z": "25c11c1790e547b3",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "46dzj166zwh3t8e5",
        "type": "postgreSQLConfig",
        "z": "25c11c1790e547b3",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "secret",
        "passwordFieldType": "str"
    }
]