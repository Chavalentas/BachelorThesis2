[
    {
        "id": "bbdba9cd0e5e7fbf",
        "type": "tab",
        "label": "postgres-table",
        "disabled": false,
        "info": ""
    },
    {
        "id": "l1ih06ibi9uk22zt",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "postgres-table",
        "info": "",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "12jblh53vvr68sxi",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "This subflow catches the errors",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "1t0b0t991r5c6e11",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "GetEndPoint (table attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 390,
        "wires": []
    },
    {
        "id": "ma853n52e84wq5i4",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "PostEndPoint (request body contains the attributes of the table, no request parameters)",
        "info": "",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "k48ah551093dyv6o",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "PutEndPoint (request body contains the attributes of the table, request parameters the primary key)",
        "info": "",
        "x": 450,
        "y": 690,
        "wires": []
    },
    {
        "id": "44v05suz77ygjw38",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "DeleteEndPoint (no request body, request parameters contain the primary key)",
        "info": "",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "oh17v4b22463h79y",
        "type": "comment",
        "z": "bbdba9cd0e5e7fbf",
        "name": "DeleteEndPoint (table attributes are query parameters)",
        "info": "",
        "x": 450,
        "y": 990,
        "wires": []
    },
    {
        "id": "45v01v80kqu0iu70",
        "type": "catch",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 290,
        "wires": [
            [
                "79mh3y6gx99kr300"
            ]
        ]
    },
    {
        "id": "79mh3y6gx99kr300",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "CreateError",
        "func": "// Store the error message \n// in the payload property.\nmsg.payload = {\n    \"error\" : msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 290,
        "wires": [
            [
                "61g8uht7305gq05o"
            ]
        ]
    },
    {
        "id": "61g8uht7305gq05o",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 400,
        "headers": {},
        "x": 650,
        "y": 290,
        "wires": []
    },
    {
        "id": "s99m62p59v1855mc",
        "type": "http in",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "url": "/public.houses",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "fr2lokyo9t8w2566"
            ]
        ]
    },
    {
        "id": "fr2lokyo9t8w2566",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\n\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "gdik3mn5u8c42f1p"
            ]
        ]
    },
    {
        "id": "gdik3mn5u8c42f1p",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "CreateSelectQuery",
        "func": "var selectQuery = \"SELECT * FROM public.houses\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = \"\";\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    selectQuery += \" WHERE \";\n    selectQuery += `${equationsJoined}`;\n}\n\nselectQuery += \";\";\nmsg.query = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "0479bj15j64m2b75"
            ]
        ]
    },
    {
        "id": "0479bj15j64m2b75",
        "type": "postgresql",
        "z": "bbdba9cd0e5e7fbf",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "m2uo43p04sg37v6l",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "6qyq1yxu9me5ap36"
            ]
        ]
    },
    {
        "id": "6qyq1yxu9me5ap36",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetResponse",
        "func": "var response = msg.payload;\nmsg.payload = {\n  \"result\" : response  \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "494gxt6t5e1urugi"
            ]
        ]
    },
    {
        "id": "494gxt6t5e1urugi",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 440,
        "wires": []
    },
    {
        "id": "93bue30ze1b200f3",
        "type": "http in",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "url": "/public.houses",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 590,
        "wires": [
            [
                "vi6g7nu1p53hd7a5"
            ]
        ]
    },
    {
        "id": "vi6g7nu1p53hd7a5",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 590,
        "wires": [
            [
                "y6lgmba6ab64648t"
            ]
        ]
    },
    {
        "id": "y6lgmba6ab64648t",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "CreateInsertQuery",
        "func": "var insertQuery = \"INSERT INTO public.houses\";\nvar propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = [];\n\nfor (let i = 0; i < msg.queryProperties.length; i++){\n    if (msg.queryProperties[i].propertyValue === \"null\"){\n        propertyValues.push(msg.queryProperties[i].propertyValue);\n    } else{\n        propertyValues.push(`'${msg.queryProperties[i].propertyValue}'`);\n    }\n}\n\nvar propertyNamesJoined = propertyNames.join(\",\");\nvar propertyValuesJoined = propertyValues.join(\",\");\ninsertQuery += `(${propertyNamesJoined})`;\ninsertQuery += \" VALUES \";\ninsertQuery += `(${propertyValuesJoined})`;\ninsertQuery += \";\";\nconsole.log(insertQuery);\nmsg.query = insertQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 590,
        "wires": [
            [
                "6vif7o7wjfdal0gv"
            ]
        ]
    },
    {
        "id": "6vif7o7wjfdal0gv",
        "type": "postgresql",
        "z": "bbdba9cd0e5e7fbf",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "m2uo43p04sg37v6l",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 590,
        "wires": [
            [
                "3s020oz97m2l5ijd"
            ]
        ]
    },
    {
        "id": "3s020oz97m2l5ijd",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 590,
        "wires": [
            [
                "8xh8l31k2ub1459b"
            ]
        ]
    },
    {
        "id": "8xh8l31k2ub1459b",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 201,
        "headers": {},
        "x": 1650,
        "y": 590,
        "wires": []
    },
    {
        "id": "x6x02xt6k4n7977e",
        "type": "http in",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "url": "/public.houses/:houseid",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "j28xm2663y4aveo1"
            ]
        ]
    },
    {
        "id": "j28xm2663y4aveo1",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryPropertyNames = Object.getOwnPropertyNames(msg.req.body);\n\nif (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nif (queryPropertyNames.some(p => !properties.some(p1 => p1 == p))) {\n    throw new Error(\"Invalid query property detected!\");\n}\n\nmsg.pk = {\"propertyName\" : \"houseid\", \"propertyValue\" : msg.req.params.houseid};\n\nif (msg.req.body.houseid !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"houseid\", \"propertyValue\": `${msg.req.body.houseid}` })\n}\n\nif (msg.req.body.housename !== undefined){\n    msg.queryProperties.push({ \"propertyName\": \"housename\", \"propertyValue\": `${msg.req.body.housename}` })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            [
                "m8822090249t5h10"
            ]
        ]
    },
    {
        "id": "m8822090249t5h10",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "CreateUpdateQuery",
        "func": "var propertyNames = msg.queryProperties.map(p => p.propertyName);\nvar propertyValues = msg.queryProperties.map(p => p.propertyValue);\nvar equations = [];\n\nfor (let i = 0; i < propertyNames.length; i++){\n    var propertyValue = \"\";\n\n    if (propertyValues[i] === \"null\"){\n        propertyValue = propertyValues[i];\n    } else{\n        propertyValue = `'${propertyValues[i]}'`;\n    }\n\n    var equation = `${propertyNames[i]} = ${propertyValue}`;\n    equations.push(equation);\n}\n\nvar pk = \"\";\n\nif (msg.pk.propertyValue === \"null\"){\n    pk = msg.pk.propertyValue;\n} else{\n    pk = `'${msg.pk.propertyValue}'`;\n}\n\nvar equationsJoined = equations.join(\",\");\nvar updateQuery = `UPDATE public.houses SET ${equationsJoined} WHERE ${msg.pk.propertyName} = ${pk};`;\nmsg.query = updateQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 740,
        "wires": [
            [
                "65xeq088wn1176l5"
            ]
        ]
    },
    {
        "id": "65xeq088wn1176l5",
        "type": "postgresql",
        "z": "bbdba9cd0e5e7fbf",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "m2uo43p04sg37v6l",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "7sc3z7l9nk9275c0"
            ]
        ]
    },
    {
        "id": "7sc3z7l9nk9275c0",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 740,
        "wires": [
            [
                "ma8509vmtmhl7pmh"
            ]
        ]
    },
    {
        "id": "ma8509vmtmhl7pmh",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 740,
        "wires": []
    },
    {
        "id": "69q8jz76f1rb0ou4",
        "type": "http in",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "url": "/public.houses/:houseid",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 890,
        "wires": [
            [
                "l6a2qqpf843623p5"
            ]
        ]
    },
    {
        "id": "l6a2qqpf843623p5",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetQueryParameters",
        "func": "if (msg.req.params.houseid === undefined){\n    throw new Error(\"The query parameter \\'houseid\\' was undefined!\");\n}\n\nvar pkValue = \"\";\n\nif (msg.req.params.houseid === \"null\"){\n    pkValue = null;\n} else{\n    pkValue = msg.req.params.houseid;\n}\n\nvar data = {\n    pk : pkValue\n};\n\nmsg.queryParameters = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 890,
        "wires": [
            [
                "p4h15ey00535zhvd"
            ]
        ]
    },
    {
        "id": "p4h15ey00535zhvd",
        "type": "postgresql",
        "z": "bbdba9cd0e5e7fbf",
        "name": "Query",
        "query": "DELETE FROM public.houses WHERE houseid = $pk;",
        "postgreSQLConfig": "m2uo43p04sg37v6l",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 750,
        "y": 890,
        "wires": [
            [
                "aar4y4sf5323o752"
            ]
        ]
    },
    {
        "id": "aar4y4sf5323o752",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 890,
        "wires": [
            [
                "3dz513mnwnmqf06x"
            ]
        ]
    },
    {
        "id": "3dz513mnwnmqf06x",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1350,
        "y": 890,
        "wires": []
    },
    {
        "id": "y3i2gk1nhy9355o8",
        "type": "http in",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "url": "/public.houses",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "8to4e0m3b5937a6z"
            ]
        ]
    },
    {
        "id": "8to4e0m3b5937a6z",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetQueryParameters",
        "func": "msg.queryProperties = [];\nvar properties = [\"houseid\",\"housename\"];\nvar queryProperties = Object.getOwnPropertyNames(msg.req.query);\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (queryProperties.some(p => !properties.some(p1 => p1 == p))){\n    throw new Error(\"Invalid query property detected!\");\n}\n\nif (msg.req.query.houseid !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"houseid\", \"propertyValue\" : `${msg.req.query.houseid}`});\n}\n\n\n\nif (msg.req.query.housename !== undefined){\n    msg.queryProperties.push({\"propertyName\": \"housename\", \"propertyValue\" : `${msg.req.query.housename}`});\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "2p53v6a75c5qb38v"
            ]
        ]
    },
    {
        "id": "2p53v6a75c5qb38v",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "CreateDeleteQuery",
        "func": "var deleteQuery = \"DELETE FROM public.houses\";\nvar equations = [];\n\nif (msg.queryProperties.length > 0){\n    for (let i = 0; i < msg.queryProperties.length; i++){\n        let equation = '';\n        \n        if (msg.queryProperties[i].propertyValue === \"null\"){\n            equation = `${msg.queryProperties[i].propertyName} is ${msg.queryProperties[i].propertyValue}`;\n        } else {\n            equation = `${msg.queryProperties[i].propertyName} = '${msg.queryProperties[i].propertyValue}'`;\n        }\n        \n        equations.push(equation);\n    }\n    \n    var equationsJoined = equations.join(\" AND \");\n    deleteQuery += \" WHERE \";\n    deleteQuery += `${equationsJoined}`;\n}\n\ndeleteQuery += \";\";\nmsg.query = deleteQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "e08fm8s804m5lxt8"
            ]
        ]
    },
    {
        "id": "e08fm8s804m5lxt8",
        "type": "postgresql",
        "z": "bbdba9cd0e5e7fbf",
        "name": "Query",
        "query": "",
        "postgreSQLConfig": "m2uo43p04sg37v6l",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "b035194pt9iq34u5"
            ]
        ]
    },
    {
        "id": "b035194pt9iq34u5",
        "type": "function",
        "z": "bbdba9cd0e5e7fbf",
        "name": "SetResponse",
        "func": "msg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1040,
        "wires": [
            [
                "87g8w5jb69m1cyjf"
            ]
        ]
    },
    {
        "id": "87g8w5jb69m1cyjf",
        "type": "http response",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "statusCode": 200,
        "headers": {},
        "x": 1650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "m2uo43p04sg37v6l",
        "type": "postgreSQLConfig",
        "z": "bbdba9cd0e5e7fbf",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "secret",
        "passwordFieldType": "str"
    }
]